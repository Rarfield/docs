"use strict";(self.webpackChunkwrapidly_docs=self.webpackChunkwrapidly_docs||[]).push([[44],{7137:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Functions/config","title":"Configuration","description":"Wrapidly uses a YAML-based configuration file called wrapper.yml. This file is created automatically on first run.","source":"@site/docs/Functions/config.md","sourceDirName":"Functions","slug":"/Functions/config","permalink":"/docs/Functions/config","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Building From Source","permalink":"/docs/Information/building"},"next":{"title":"Command Remapping","permalink":"/docs/Functions/remap"}}');var r=i(4848),s=i(8453);const t={sidebar_position:3},a="Configuration",c={},d=[{value:"Sample Configuration",id:"sample-configuration",level:2},{value:"Fields",id:"fields",level:2},{value:"<code>jvm</code>",id:"jvm",level:3},{value:"<code>webhook</code>",id:"webhook",level:3},{value:"<code>remap</code>",id:"remap",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,r.jsxs)(n.p,{children:["Wrapidly uses a YAML-based configuration file called ",(0,r.jsx)(n.code,{children:"wrapper.yml"}),". This file is created automatically on first run."]}),"\n",(0,r.jsx)(n.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Wrapidly Config\r\njvm: java -jar server.jar\r\n\r\nwebhook: ""  # Optional: Discord webhook URL\r\n\r\nremap:\r\n  # stop: end\r\n  # restart: stop\n'})}),"\n",(0,r.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(n.h3,{id:"jvm",children:(0,r.jsx)(n.code,{children:"jvm"})}),"\n",(0,r.jsx)(n.p,{children:"Defines the command to launch your Minecraft server. This can include arguments and flags."}),"\n",(0,r.jsx)(n.h3,{id:"webhook",children:(0,r.jsx)(n.code,{children:"webhook"})}),"\n",(0,r.jsx)(n.p,{children:"Optional. If set, Wrapidly will send a Discord embed when the server starts and when it stops."}),"\n",(0,r.jsx)(n.h3,{id:"remap",children:(0,r.jsx)(n.code,{children:"remap"})}),"\n",(0,r.jsx)(n.p,{children:"Optional. Allows mapping console commands to alternative commands. Useful for BungeeCord or proxy-based setups."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var o=i(6540);const r={},s=o.createContext(r);function t(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);